"""
問題文
青木君は任意の整数 xに対し、以下の操作を行うことができます。

操作:
xをxとKの差の絶対値で置き換える。

整数Nの初期値が与えられます。
この整数に上記の操作を0回以上好きな回数行った時にとりうるNの最小値を求めてください。

制約
0≤N≤10^18
1≤K≤10^18
入力は全て整数
===================
tried-01:
n%k と n%k-kの絶対値 で小さいほうを出力している。
improvement:
n%k-kの絶対値 を -n%k で表現している。このやり方は知らなかった。
しかし、負数の剰余は、プログラミング言語ごとに定義が違うので、バグのもとらしい。
-5%3, 5%-3を求めるとき、
・Python,Rubyなどでは最小非負剰余で求め、0≤ r < n の定義より、答えは1, -1
・C,C++,Javaなどでは絶対値最小剰余で求め、-n/2 ≤ r < n/2 の定義より、答えは-2, 2
となるらしい。
"""

# === tried-01 ===
n, k = map(int, input().split())
plus_min = n % k

print(min(plus_min, abs(plus_min - k)))

# === improvement ===
n, k = map(int, input().split())
print(min(n % k, -n % k))
